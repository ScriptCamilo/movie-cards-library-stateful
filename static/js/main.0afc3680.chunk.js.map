{"version":3,"sources":["components/Header.jsx","components/Rating.jsx","components/MovieCard.jsx","components/MovieList.jsx","components/Input.jsx","components/Option.jsx","components/Select.jsx","components/SearchBar.jsx","addMovieInputs.js","components/AddMovie.jsx","components/MovieLibrary.jsx","data.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","React","Component","Rating","rating","this","props","defaultProps","MovieCard","movie","title","subtitle","storyline","imagePath","alt","src","Number","MovieList","movies","map","Input","CustomTag","label","text","input","name","type","value","checked","onChange","htmlFor","Option","id","Select","select","options","option","SearchBar","getProps","bind","getInputs","getSelects","searchText","onSearchTextChange","bookmarkedOnly","onBookmarkedChange","selectedGenre","onSelectedGenreChange","optionId","inputs","selects","AddMovie","submitHandle","onChangeHandle","getState","state","genre","target","setState","event","preventDefault","onClick","MovieLibrary","filterMovies","addMovie","bookmarked","toLowerCase","includes","filtered","filter","bookmarkedMovies","genreMovies","textMovies","newMovie","console","log","searchBarProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0afc3680.chunk.js","sourcesContent":["import React from 'react';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header className=\"movie-card-header\">\n        <h1 className=\"page-title\">Movie Cards Library</h1>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Rating extends React.Component {\n  render() {\n    const { rating } = this.props;\n    return (\n      <div className=\"movie-card-rating\" data-testid=\"rating\">\n        <span className=\"rating\">{rating}</span>\n      </div>\n    );\n  }\n}\n\nRating.propTypes = { rating: PropTypes.number };\n\nRating.defaultProps = {\n  rating: '0',\n};\n\nexport default Rating;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Rating from './Rating';\n\nclass MovieCard extends React.Component {\n  render() {\n    const { movie } = this.props;\n    const { title, subtitle, storyline, rating, imagePath } = movie;\n    return (\n      <div className=\"movie-card\" data-testid=\"movie-card\">\n        <img alt=\"Movie Cover\" className=\"movie-card-image\" src={ imagePath } />\n        <div className=\"movie-card-body\">\n          <h4 data-testid=\"movie-card-title\" className=\"movie-card-title\">{title}</h4>\n          <h5 className=\"movie-card-subtitle\">{subtitle}</h5>\n          <p className=\"movie-card-storyline\">{storyline}</p>\n        </div>\n        <Rating rating={ Number(rating) } />\n      </div>\n    );\n  }\n}\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n    storyline: PropTypes.string,\n    rating: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    imagePath: PropTypes.string,\n  }).isRequired,\n};\n\nexport default MovieCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MovieCard from './MovieCard';\n\nclass MovieList extends React.Component {\n  render() {\n    const { movies } = this.props;\n\n    return (\n      <div data-testid=\"movie-list\" className=\"movie-list\">\n        { movies.map((movie) => <MovieCard key={ movie.title } movie={ movie } />) }\n      </div>\n    );\n  }\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.object,\n  ).isRequired,\n};\n\nexport default MovieList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Input extends React.Component {\n  render() {\n    const {\n      CustomTag,\n      label,\n      text,\n      input,\n      name,\n      type,\n      value,\n      checked,\n      onChange,\n    } = this.props;\n\n    // https://stackoverflow.com/questions/33471880/dynamic-tag-name-in-jsx-and-react\n    return (\n      <label htmlFor={ input } data-testid={ label }>\n        {text}\n        <CustomTag\n          data-testid={ input }\n          name={ name }\n          type={ type }\n          value={ value }\n          checked={ checked }\n          onChange={ onChange }\n        />\n      </label>\n    );\n  }\n}\n\n// https://reactjs.org/docs/typechecking-with-proptypes.html\nInput.propTypes = {\n  CustomTag: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  input: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  checked: PropTypes.bool,\n  onChange: PropTypes.func.isRequired,\n};\n\nInput.defaultProps = {\n  CustomTag: 'input',\n  checked: false,\n  value: '',\n  type: 'text',\n};\n\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Option extends React.Component {\n  render() {\n    const { id, value, text } = this.props;\n    return (\n      <option data-testid={ id } value={ value }>{text}</option>\n    );\n  }\n}\n\nOption.propTypes = {\n  id: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport default Option;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Option from './Option';\n\nclass Select extends React.Component {\n  render() {\n    const {\n      label,\n      select,\n      name,\n      text,\n      options,\n      value,\n      onChange,\n    } = this.props;\n\n    return (\n      <label htmlFor={ select } data-testid={ label }>\n        {text}\n        <select\n          data-testid={ select }\n          name={ name }\n          value={ value }\n          onChange={ onChange }\n        >\n          {options.map((option) => <Option key={ option.value } { ...option } />)}\n        </select>\n      </label>\n    );\n  }\n}\n\nSelect.propTypes = {\n  label: PropTypes.string.isRequired,\n  select: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  options: PropTypes.arrayOf(PropTypes.object).isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Select;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Input from './Input';\nimport Select from './Select';\n\nclass SearchBar extends React.Component {\n  constructor() {\n    super();\n\n    this.getProps = this.getProps.bind(this);\n    this.getInputs = this.getInputs.bind(this);\n    this.getSelects = this.getSelects.bind(this);\n  }\n\n  getProps() {\n    const {\n      searchText,\n      onSearchTextChange,\n      bookmarkedOnly,\n      onBookmarkedChange,\n      selectedGenre,\n      onSelectedGenreChange,\n    } = this.props;\n\n    return {\n      searchText,\n      onSearchTextChange,\n      bookmarkedOnly,\n      onBookmarkedChange,\n      selectedGenre,\n      onSelectedGenreChange,\n    };\n  }\n\n  getInputs() {\n    return [\n      {\n        label: 'text-input-label',\n        text: 'Inclui o texto:',\n        input: 'text-input',\n        name: 'searchText',\n        type: 'text',\n        value: this.getProps().searchText,\n        onChange: this.getProps().onSearchTextChange,\n      },\n      {\n        label: 'checkbox-input-label',\n        text: 'Mostrar somente favoritos',\n        input: 'checkbox-input',\n        name: 'bookmarkedOnly',\n        type: 'checkbox',\n        checked: this.getProps().bookmarkedOnly,\n        onChange: this.getProps().onBookmarkedChange,\n      },\n    ];\n  }\n\n  getSelects() {\n    const optionId = 'select-option';\n    return [\n      {\n        label: 'select-input-label',\n        select: 'select-input',\n        name: 'selectedGenre',\n        text: 'Filtrar por gênero',\n        value: this.getProps().selectedGenre,\n        onChange: this.getProps().onSelectedGenreChange,\n        options: [\n          {\n            id: optionId,\n            value: '',\n            text: 'Todos',\n          },\n          {\n            id: optionId,\n            value: 'action',\n            text: 'Ação',\n          },\n          {\n            id: optionId,\n            value: 'comedy',\n            text: 'Comédia',\n          },\n          {\n            id: optionId,\n            value: 'thriller',\n            text: 'Suspense',\n          },\n        ],\n      },\n    ];\n  }\n\n  render() {\n    const inputs = this.getInputs();\n    const selects = this.getSelects();\n\n    return (\n      <form data-testid=\"search-bar-form\">\n        {inputs.map((input) => <Input key={ input.name } { ...input } />)}\n\n        {selects.map((select) => <Select key={ select.name } { ...select } />)}\n      </form>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  searchText: PropTypes.string.isRequired,\n  onSearchTextChange: PropTypes.func.isRequired,\n  bookmarkedOnly: PropTypes.bool.isRequired,\n  onBookmarkedChange: PropTypes.func.isRequired,\n  selectedGenre: PropTypes.string.isRequired,\n  onSelectedGenreChange: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","const inputs = [\n  {\n    label: 'title-input-label',\n    text: 'Título',\n    input: 'title-input',\n    name: 'title',\n  },\n  {\n    label: 'subtitle-input-label',\n    text: 'Subtítulo',\n    input: 'subtitle-input',\n    name: 'subtitle',\n  },\n  {\n    label: 'image-input-label',\n    text: 'Imagem',\n    input: 'image-input',\n    name: 'imagePath',\n  },\n  {\n    CustomTag: 'textarea',\n    label: 'storyline-input-label',\n    text: 'Sinopse',\n    input: 'storyline-input',\n    name: 'storyline',\n  },\n  {\n    label: 'rating-input-label',\n    text: 'Avaliação',\n    input: 'rating-input',\n    name: 'rating',\n    type: 'number',\n  },\n];\n\nconst optionId = 'genre-option';\nconst selects = [\n  {\n    label: 'genre-input-label',\n    select: 'genre-input',\n    name: 'genre',\n    text: 'Gênero',\n    options: [\n      {\n        id: optionId,\n        value: 'action',\n        text: 'Ação',\n      },\n      {\n        id: optionId,\n        value: 'comedy',\n        text: 'Comédia',\n      },\n      {\n        id: optionId,\n        value: 'thriller',\n        text: 'Suspense',\n      },\n    ],\n  },\n];\n\nexport { inputs, selects };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Input from './Input';\nimport Select from './Select';\nimport { inputs, selects } from '../addMovieInputs';\n\nclass AddMovie extends React.Component {\n  constructor() {\n    super();\n\n    this.submitHandle = this.submitHandle.bind(this);\n    this.onChangeHandle = this.onChangeHandle.bind(this);\n    this.getState = this.getState.bind(this);\n\n    this.state = {\n      title: '',\n      subtitle: '',\n      storyline: '',\n      imagePath: '',\n      rating: 0,\n      genre: 'action',\n    };\n  }\n\n  onChangeHandle({ target }) {\n    const { name } = target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  getState() {\n    const {\n      title,\n      subtitle,\n      storyline,\n      imagePath,\n      rating,\n      genre,\n    } = this.state;\n\n    return {\n      title,\n      subtitle,\n      storyline,\n      imagePath,\n      rating,\n      genre,\n    };\n  }\n\n  submitHandle(event) {\n    event.preventDefault();\n    const { onClick } = this.props;\n\n    onClick(this.getState());\n\n    this.setState({\n      title: '',\n      subtitle: '',\n      storyline: '',\n      imagePath: '',\n      rating: 0,\n      genre: 'action',\n    });\n  }\n\n  render() {\n    // const { onClick } = this.props;\n\n    return (\n      <form data-testid=\"add-movie-form\">\n        {inputs.map((input) => {\n          // https://stackoverflow.com/questions/35939289/how-to-destructure-into-dynamically-named-variables-in-es6\n          const { [input.name]: value } = this.getState();\n\n          return (<Input\n            key={ input.name }\n            { ...input }\n            value={ value }\n            onChange={ this.onChangeHandle }\n          />);\n        })}\n\n        {selects.map((select) => {\n          const { [select.name]: value } = this.getState();\n\n          return (\n            <Select\n              key={ select.text }\n              { ...select }\n              value={ value }\n              onChange={ this.onChangeHandle }\n            />\n          );\n        })}\n\n        <button\n          type=\"submit\"\n          data-testid=\"send-button\"\n          onClick={ this.submitHandle }\n        >\n          Adicionar filme\n        </button>\n      </form>\n    );\n  }\n}\n\nAddMovie.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default AddMovie;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport MovieList from './MovieList';\nimport SearchBar from './SearchBar';\nimport AddMovie from './AddMovie';\n\nclass MovieLibrary extends Component {\n  constructor(props) {\n    super(props);\n    const { movies } = this.props;\n\n    this.onChangeHandle = this.onChangeHandle.bind(this);\n    this.filterMovies = this.filterMovies.bind(this);\n    this.addMovie = this.addMovie.bind(this);\n\n    this.state = {\n      searchText: '',\n      bookmarkedOnly: false,\n      selectedGenre: '',\n      movies,\n    };\n  }\n\n  onChangeHandle({ target }) {\n    const { name } = target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  bookmarkedMovies({ bookmarked }) {\n    return bookmarked;\n  }\n\n  genreMovies({ genre }, selectedGenre) {\n    if (genre === selectedGenre) return true;\n    return false;\n  }\n\n  textMovies({ title, subtitle, storyline }, searchText) {\n    if (\n      title.toLowerCase().includes(searchText.toLowerCase())\n      || subtitle.toLowerCase().includes(searchText.toLowerCase())\n      || storyline.toLowerCase().includes(searchText.toLowerCase())\n    ) return true;\n\n    return false;\n  }\n\n  filterMovies() {\n    const { movies, searchText, bookmarkedOnly, selectedGenre: genre } = this.state;\n    let filtered;\n\n    if (bookmarkedOnly) {\n      filtered = movies.filter(this.bookmarkedMovies);\n    }\n\n    if (genre !== '') {\n      filtered = filtered ? filtered.filter((movie) => this.genreMovies(movie, genre))\n        : movies.filter((movie) => this.genreMovies(movie, genre));\n    }\n\n    return filtered ? filtered.filter((movie) => this.textMovies(movie, searchText))\n      : movies.filter((movie) => this.textMovies(movie, searchText));\n  }\n\n  addMovie(newMovie) {\n    console.log(newMovie);\n    this.setState(({ movies }) => ({\n      movies: [...movies, newMovie],\n    }));\n  }\n\n  render() {\n    const searchBarProps = () => {\n      const {\n        searchText,\n        bookmarkedOnly,\n        selectedGenre,\n      } = this.state;\n\n      return { searchText, bookmarkedOnly, selectedGenre };\n    };\n\n    return (\n      <div>\n        <h2> My awesome movie library </h2>\n        <SearchBar\n          { ...searchBarProps() }\n          onSearchTextChange={ this.onChangeHandle }\n          onBookmarkedChange={ this.onChangeHandle }\n          onSelectedGenreChange={ this.onChangeHandle }\n        />\n        <MovieList movies={ this.filterMovies() } />\n        <AddMovie onClick={ this.addMovie } />\n      </div>\n    );\n  }\n}\n\nMovieLibrary.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default MovieLibrary;\n","const movies = [\n  {\n    title: 'Kingsglaive',\n    subtitle: 'Final Fantasy XV',\n    storyline: \"King Regis, who oversees the land of Lucis, commands his army of soldiers to protect the kingdom from the Niflheim empire's plans to steal the sacred crystal.\",\n    rating: 4.5,\n    imagePath: 'images/Kingsglaive_Final_Fantasy_XV.jpg',\n    bookmarked: true,\n    genre: 'action',\n  },\n  {\n    title: 'Final Fantasy',\n    subtitle: 'Spirits Within',\n    storyline: 'A scientist makes a last stand on Earth with the help of a ragtag team of soldiers against an invasion of alien phantoms.',\n    rating: 4.5,\n    imagePath: 'images/Final_Fantasy_Spirits_Within.jpg',\n    bookmarked: false,\n    genre: 'fantasy',\n  },\n  {\n    title: 'Ghost In The Shell',\n    subtitle: 'Ghost In The Shell',\n    storyline: 'A hacker known as the Puppet Master is hunted by a female cyborg cop and her partner. This film is a revised version of Ghost in the Shell (1995).',\n    rating: 5,\n    imagePath: 'images/Ghost_In_The_Shell_2_0.jpg',\n    bookmarked: false,\n    genre: 'comedy',\n  },\n  {\n    title: 'Appleseed Alpha',\n    subtitle: 'Appleseed Alpha',\n    storyline: \"A young female soldier Deunan and her cyborg partner Briareos survive through the post World War 3 apocalyptic New York in search of human's future hope, the legendary city of Olympus.\",\n    rating: 3.8,\n    imagePath: 'images/Appleseed_Alpha.jpg',\n    bookmarked: true,\n    genre: 'action',\n  },\n  {\n    title: 'Resident Evil',\n    subtitle: 'Vendetta',\n    storyline: 'Chris Redfield enlists the help of Leon S. Kennedy and Rebecca Chambers to stop a death merchant, with a vengeance, from spreading a deadly virus in New York.',\n    rating: 4.2,\n    imagePath: 'images/Resident_Evil_Vendetta.jpg',\n    bookmarked: true,\n    genre: 'fantasy',\n  },\n];\n\nexport default movies;\n","import React from 'react';\nimport Header from './components/Header';\nimport MovieLibrary from './components/MovieLibrary';\nimport movies from './data';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <MovieLibrary movies={ movies } />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}